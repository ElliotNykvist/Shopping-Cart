import {
  __esm,
  __toESM,
  require_react
} from "./chunk-YJNMHHGL.js";

// node_modules/react-icons/lib/esm/iconContext.js
var import_react, DefaultContext, IconContext;
var init_iconContext = __esm({
  "node_modules/react-icons/lib/esm/iconContext.js"() {
    import_react = __toESM(require_react());
    DefaultContext = {
      color: void 0,
      size: void 0,
      className: void 0,
      style: void 0,
      attr: void 0
    };
    IconContext = import_react.default.createContext && import_react.default.createContext(DefaultContext);
  }
});

// node_modules/react-icons/lib/esm/iconBase.js
function Tree2Element(tree) {
  return tree && tree.map(function(node, i) {
    return import_react2.default.createElement(node.tag, __assign({
      key: i
    }, node.attr), Tree2Element(node.child));
  });
}
function GenIcon(data) {
  return function(props) {
    return import_react2.default.createElement(IconBase, __assign({
      attr: __assign({}, data.attr)
    }, props), Tree2Element(data.child));
  };
}
function IconBase(props) {
  var elem = function(conf) {
    var attr = props.attr, size = props.size, title = props.title, svgProps = __rest(props, ["attr", "size", "title"]);
    var computedSize = size || conf.size || "1em";
    var className;
    if (conf.className)
      className = conf.className;
    if (props.className)
      className = (className ? className + " " : "") + props.className;
    return import_react2.default.createElement("svg", __assign({
      stroke: "currentColor",
      fill: "currentColor",
      strokeWidth: "0"
    }, conf.attr, attr, svgProps, {
      className,
      style: __assign(__assign({
        color: props.color || conf.color
      }, conf.style), props.style),
      height: computedSize,
      width: computedSize,
      xmlns: "http://www.w3.org/2000/svg"
    }), title && import_react2.default.createElement("title", null, title), props.children);
  };
  return IconContext !== void 0 ? import_react2.default.createElement(IconContext.Consumer, null, function(conf) {
    return elem(conf);
  }) : elem(DefaultContext);
}
var import_react2, __assign, __rest;
var init_iconBase = __esm({
  "node_modules/react-icons/lib/esm/iconBase.js"() {
    import_react2 = __toESM(require_react());
    init_iconContext();
    __assign = function() {
      __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
          s = arguments[i];
          for (var p in s)
            if (Object.prototype.hasOwnProperty.call(s, p))
              t[p] = s[p];
        }
        return t;
      };
      return __assign.apply(this, arguments);
    };
    __rest = function(s, e) {
      var t = {};
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
          t[p] = s[p];
      if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
          if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
            t[p[i]] = s[p[i]];
        }
      return t;
    };
  }
});

// node_modules/react-icons/lib/esm/iconsManifest.js
var init_iconsManifest = __esm({
  "node_modules/react-icons/lib/esm/iconsManifest.js"() {
  }
});

// node_modules/react-icons/lib/esm/index.js
var init_esm = __esm({
  "node_modules/react-icons/lib/esm/index.js"() {
    init_iconsManifest();
    init_iconBase();
    init_iconContext();
  }
});

export {
  GenIcon,
  init_esm
};
//# sourceMappingURL=chunk-XHZK5XNZ.js.map
